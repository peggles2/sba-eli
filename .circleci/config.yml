version: 2

jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Make service layer the base directory
          command: |
            cp -r ./service-layer/. ./
            rm -rf ./service-layer ./front-end
      - restore_cache:
          keys:
            - service-layer-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - run: bundle exec rubocop
      - save_cache:
          key: service-layer-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  rspec:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          PGHOST: "127.0.0.1"
          PGUSER: "sbaeli"
          RAILS_ENV: "test"
          CANVAS_NAMESPACE: "sba-eli-service"
          CANVAS_HOST: "http://example.canvas.com"
          CANVAS_URI: "http://localhost:3000/auth/canvas/callback"
          CANVAS_TOKEN: "ffffffffffffffffffffffff"
          CANVAS_ACCOUNT_ID: ""
          CANVAS_API_URI: ""
          AWS_ACCESS_KEY_ID: "aws_access_key_id"
          AWS_SECRET_ACCESS_KEY: "aws_secret_access_key"
          AWS_REGION: "us-east-1"
          AWS_COGNITO_USER_POOL_ID: ""
          AWS_COGNITO_CLIENT_ID: ""
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: sbaeli
          POSTGRES_DB: sba-eli_test
          POSTGRES_PASSWORD: ""
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Make service layer the base directory
          command: |
            cp -r ./service-layer/. ./
            rm -rf ./service-layer ./front-end
      - restore_cache:
          keys:
            - service-layer-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: service-layer-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb")"
            bundle exec rspec --format progress \
                --out /tmp/test-results/rspec.xml \
                --format progress \
                $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  rubocop_and_rspec:
    jobs:
      - rubocop
      - rspec
