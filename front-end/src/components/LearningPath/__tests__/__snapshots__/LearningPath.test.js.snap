// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LearningPath should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LearningPath
    match={
      Object {
        "params": Object {
          "id": 1,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "centered": true,
      "children": Array [
        <GridRow
          className="path-breadcrumb-row"
        >
          <GridColumn
            computer={15}
            mobile={15}
            tablet={15}
          >
            <LearningPathBreadCrumb
              id={1}
            />
          </GridColumn>
        </GridRow>,
        <GridRow
          className="path-header-row"
        >
          <GridColumn
            computer={15}
            mobile={15}
            tablet={15}
          >
            <Header
              as="h2"
              className="path-header"
            >
              <Button
                as="button"
                className="path-header-share mobile hidden"
                role="button"
              >
                Share   
                <Icon
                  as="i"
                  name="share"
                />
              </Button>
            </Header>
          </GridColumn>
        </GridRow>,
        <Divider />,
        <GridRow>
          <GridColumn
            className="mobile hidden"
            computer={5}
            largeScreen={3}
            tablet={5}
            widescreen={3}
          >
            <TopicSideBar
              course_id={1}
              topicsList={Array []}
            />
          </GridColumn>
          <GridColumn
            computer={11}
            largeScreen={11}
            mobile={15}
            tablet={11}
            widescreen={11}
          >
            <TopicContentView
              course_id={1}
              topicsList={Array []}
            />
          </GridColumn>
        </GridRow>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            computer={15}
            mobile={15}
            tablet={15}
          >
            <LearningPathBreadCrumb
              id={1}
            />
          </GridColumn>,
          "className": "path-breadcrumb-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <LearningPathBreadCrumb
              id={1}
            />,
            "computer": 15,
            "mobile": 15,
            "tablet": 15,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": 1,
              "pathName": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            computer={15}
            mobile={15}
            tablet={15}
          >
            <Header
              as="h2"
              className="path-header"
            >
              <Button
                as="button"
                className="path-header-share mobile hidden"
                role="button"
              >
                Share   
                <Icon
                  as="i"
                  name="share"
                />
              </Button>
            </Header>
          </GridColumn>,
          "className": "path-header-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Header
              as="h2"
              className="path-header"
            >
              <Button
                as="button"
                className="path-header-share mobile hidden"
                role="button"
              >
                Share   
                <Icon
                  as="i"
                  name="share"
                />
              </Button>
            </Header>,
            "computer": 15,
            "mobile": 15,
            "tablet": 15,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h2",
              "children": Array [
                undefined,
                <Button
                  as="button"
                  className="path-header-share mobile hidden"
                  role="button"
                >
                  Share   
                  <Icon
                    as="i"
                    name="share"
                  />
                </Button>,
              ],
              "className": "path-header",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": Array [
                    "Share   ",
                    <Icon
                      as="i"
                      name="share"
                    />,
                  ],
                  "className": "path-header-share mobile hidden",
                  "role": "button",
                },
                "ref": null,
                "rendered": Array [
                  "Share   ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "share",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <GridColumn
              className="mobile hidden"
              computer={5}
              largeScreen={3}
              tablet={5}
              widescreen={3}
            >
              <TopicSideBar
                course_id={1}
                topicsList={Array []}
              />
            </GridColumn>,
            <GridColumn
              computer={11}
              largeScreen={11}
              mobile={15}
              tablet={11}
              widescreen={11}
            >
              <TopicContentView
                course_id={1}
                topicsList={Array []}
              />
            </GridColumn>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <TopicSideBar
                course_id={1}
                topicsList={Array []}
              />,
              "className": "mobile hidden",
              "computer": 5,
              "largeScreen": 3,
              "tablet": 5,
              "widescreen": 3,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "course_id": 1,
                "event_id": undefined,
                "module_id": undefined,
                "topicsList": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <TopicContentView
                course_id={1}
                topicsList={Array []}
              />,
              "computer": 11,
              "largeScreen": 11,
              "mobile": 15,
              "tablet": 11,
              "widescreen": 11,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "course_id": 1,
                "topicsList": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": Array [
          <GridRow
            className="path-breadcrumb-row"
          >
            <GridColumn
              computer={15}
              mobile={15}
              tablet={15}
            >
              <LearningPathBreadCrumb
                id={1}
              />
            </GridColumn>
          </GridRow>,
          <GridRow
            className="path-header-row"
          >
            <GridColumn
              computer={15}
              mobile={15}
              tablet={15}
            >
              <Header
                as="h2"
                className="path-header"
              >
                <Button
                  as="button"
                  className="path-header-share mobile hidden"
                  role="button"
                >
                  Share   
                  <Icon
                    as="i"
                    name="share"
                  />
                </Button>
              </Header>
            </GridColumn>
          </GridRow>,
          <Divider />,
          <GridRow>
            <GridColumn
              className="mobile hidden"
              computer={5}
              largeScreen={3}
              tablet={5}
              widescreen={3}
            >
              <TopicSideBar
                course_id={1}
                topicsList={Array []}
              />
            </GridColumn>
            <GridColumn
              computer={11}
              largeScreen={11}
              mobile={15}
              tablet={11}
              widescreen={11}
            >
              <TopicContentView
                course_id={1}
                topicsList={Array []}
              />
            </GridColumn>
          </GridRow>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn
              computer={15}
              mobile={15}
              tablet={15}
            >
              <LearningPathBreadCrumb
                id={1}
              />
            </GridColumn>,
            "className": "path-breadcrumb-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <LearningPathBreadCrumb
                id={1}
              />,
              "computer": 15,
              "mobile": 15,
              "tablet": 15,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": 1,
                "pathName": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn
              computer={15}
              mobile={15}
              tablet={15}
            >
              <Header
                as="h2"
                className="path-header"
              >
                <Button
                  as="button"
                  className="path-header-share mobile hidden"
                  role="button"
                >
                  Share   
                  <Icon
                    as="i"
                    name="share"
                  />
                </Button>
              </Header>
            </GridColumn>,
            "className": "path-header-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Header
                as="h2"
                className="path-header"
              >
                <Button
                  as="button"
                  className="path-header-share mobile hidden"
                  role="button"
                >
                  Share   
                  <Icon
                    as="i"
                    name="share"
                  />
                </Button>
              </Header>,
              "computer": 15,
              "mobile": 15,
              "tablet": 15,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "h2",
                "children": Array [
                  undefined,
                  <Button
                    as="button"
                    className="path-header-share mobile hidden"
                    role="button"
                  >
                    Share   
                    <Icon
                      as="i"
                      name="share"
                    />
                  </Button>,
                ],
                "className": "path-header",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": Array [
                      "Share   ",
                      <Icon
                        as="i"
                        name="share"
                      />,
                    ],
                    "className": "path-header-share mobile hidden",
                    "role": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Share   ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "share",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridColumn
                className="mobile hidden"
                computer={5}
                largeScreen={3}
                tablet={5}
                widescreen={3}
              >
                <TopicSideBar
                  course_id={1}
                  topicsList={Array []}
                />
              </GridColumn>,
              <GridColumn
                computer={11}
                largeScreen={11}
                mobile={15}
                tablet={11}
                widescreen={11}
              >
                <TopicContentView
                  course_id={1}
                  topicsList={Array []}
                />
              </GridColumn>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <TopicSideBar
                  course_id={1}
                  topicsList={Array []}
                />,
                "className": "mobile hidden",
                "computer": 5,
                "largeScreen": 3,
                "tablet": 5,
                "widescreen": 3,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "course_id": 1,
                  "event_id": undefined,
                  "module_id": undefined,
                  "topicsList": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <TopicContentView
                  course_id={1}
                  topicsList={Array []}
                />,
                "computer": 11,
                "largeScreen": 11,
                "mobile": 15,
                "tablet": 11,
                "widescreen": 11,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "course_id": 1,
                  "topicsList": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
