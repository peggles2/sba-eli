// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LearningPathsItem should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LearningPathsItem
    item={
      Object {
        "id": 1,
        "name": "LP 1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Image
          alt="learning path image placeholder"
          as="img"
          src="/Image_Placeholder.png"
          ui={true}
        />,
        <CardContent>
          <CardHeader>
            <a
              href="/learning_paths/undefined"
            />
          </CardHeader>
          <CardMeta />
          <CardDescription>
            Maybe it means something more - something we can't yet understand.
          </CardDescription>
        </CardContent>,
        <CardContent>
          <LearningPathProgress
            complete={4}
            total={5}
          />
        </CardContent>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alt": "learning path image placeholder",
          "as": "img",
          "src": "/Image_Placeholder.png",
          "ui": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <CardHeader>
              <a
                href="/learning_paths/undefined"
              />
            </CardHeader>,
            <CardMeta />,
            <CardDescription>
              Maybe it means something more - something we can't yet understand.
            </CardDescription>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <a
                href="/learning_paths/undefined"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "href": "/learning_paths/undefined",
              },
              "ref": null,
              "rendered": null,
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Maybe it means something more - something we can't yet understand.",
            },
            "ref": null,
            "rendered": "Maybe it means something more - something we can't yet understand.",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <LearningPathProgress
            complete={4}
            total={5}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "complete": 4,
            "total": 5,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Image
            alt="learning path image placeholder"
            as="img"
            src="/Image_Placeholder.png"
            ui={true}
          />,
          <CardContent>
            <CardHeader>
              <a
                href="/learning_paths/undefined"
              />
            </CardHeader>
            <CardMeta />
            <CardDescription>
              Maybe it means something more - something we can't yet understand.
            </CardDescription>
          </CardContent>,
          <CardContent>
            <LearningPathProgress
              complete={4}
              total={5}
            />
          </CardContent>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alt": "learning path image placeholder",
            "as": "img",
            "src": "/Image_Placeholder.png",
            "ui": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <CardHeader>
                <a
                  href="/learning_paths/undefined"
                />
              </CardHeader>,
              <CardMeta />,
              <CardDescription>
                Maybe it means something more - something we can't yet understand.
              </CardDescription>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <a
                  href="/learning_paths/undefined"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "href": "/learning_paths/undefined",
                },
                "ref": null,
                "rendered": null,
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Maybe it means something more - something we can't yet understand.",
              },
              "ref": null,
              "rendered": "Maybe it means something more - something we can't yet understand.",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <LearningPathProgress
              complete={4}
              total={5}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "complete": 4,
              "total": 5,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
