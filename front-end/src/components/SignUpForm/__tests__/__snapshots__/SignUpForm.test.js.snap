// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUpForm should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUpForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Form
        as="form"
        onSubmit={[Function]}
      >
        <FormField>
          <Input
            onChange={[Function]}
            placeholder="First Name"
            type="text"
            value=""
          />
           
          <br />
        </FormField>
        <FormField>
          <Input
            onChange={[Function]}
            placeholder="Last Name"
            type="text"
            value=""
          />
           
          <br />
        </FormField>
        <FormField>
          <Input
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
          />
           
          <br />
        </FormField>
        <FormField>
          <Input
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          <br />
        </FormField>
        <FormField>
          <Input
            onChange={[Function]}
            placeholder="Confirm Password"
            type="password"
            value=""
          />
          <br />
        </FormField>
        <Button
          as="button"
          role="button"
          type="submit"
        >
          Submit
        </Button>
      </Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="First Name"
              type="text"
              value=""
            />
             
            <br />
          </FormField>,
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Last Name"
              type="text"
              value=""
            />
             
            <br />
          </FormField>,
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
             
            <br />
          </FormField>,
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            <br />
          </FormField>,
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Confirm Password"
              type="password"
              value=""
            />
            <br />
          </FormField>,
          <Button
            as="button"
            role="button"
            type="submit"
          >
            Submit
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                onChange={[Function]}
                placeholder="First Name"
                type="text"
                value=""
              />,
              " ",
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "placeholder": "First Name",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                onChange={[Function]}
                placeholder="Last Name"
                type="text"
                value=""
              />,
              " ",
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Last Name",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />,
              " ",
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />,
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                onChange={[Function]}
                placeholder="Confirm Password"
                type="password"
                value=""
              />,
              <br />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Confirm Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Submit",
            "role": "button",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          as="form"
          onSubmit={[Function]}
        >
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="First Name"
              type="text"
              value=""
            />
             
            <br />
          </FormField>
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Last Name"
              type="text"
              value=""
            />
             
            <br />
          </FormField>
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
             
            <br />
          </FormField>
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            <br />
          </FormField>
          <FormField>
            <Input
              onChange={[Function]}
              placeholder="Confirm Password"
              type="password"
              value=""
            />
            <br />
          </FormField>
          <Button
            as="button"
            role="button"
            type="submit"
          >
            Submit
          </Button>
        </Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": Array [
            <FormField>
              <Input
                onChange={[Function]}
                placeholder="First Name"
                type="text"
                value=""
              />
               
              <br />
            </FormField>,
            <FormField>
              <Input
                onChange={[Function]}
                placeholder="Last Name"
                type="text"
                value=""
              />
               
              <br />
            </FormField>,
            <FormField>
              <Input
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />
               
              <br />
            </FormField>,
            <FormField>
              <Input
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />
              <br />
            </FormField>,
            <FormField>
              <Input
                onChange={[Function]}
                placeholder="Confirm Password"
                type="password"
                value=""
              />
              <br />
            </FormField>,
            <Button
              as="button"
              role="button"
              type="submit"
            >
              Submit
            </Button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  onChange={[Function]}
                  placeholder="First Name"
                  type="text"
                  value=""
                />,
                " ",
                <br />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "First Name",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  onChange={[Function]}
                  placeholder="Last Name"
                  type="text"
                  value=""
                />,
                " ",
                <br />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Last Name",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  onChange={[Function]}
                  placeholder="Email"
                  type="text"
                  value=""
                />,
                " ",
                <br />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Email",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  onChange={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
                />,
                <br />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  onChange={[Function]}
                  placeholder="Confirm Password"
                  type="password"
                  value=""
                />,
                <br />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Confirm Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Submit",
              "role": "button",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
