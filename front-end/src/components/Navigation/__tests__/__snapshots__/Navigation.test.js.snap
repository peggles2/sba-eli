// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navigation />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Navbar />,
        <BrowserRouter>
          <div>
            <Grid>
              <GridRow>
                <GridColumn
                  computer={3}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationMenu />
                </GridColumn>
                <GridColumn
                  computer={13}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>
          </div>
        </BrowserRouter>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <Grid>
              <GridRow>
                <GridColumn
                  computer={3}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationMenu />
                </GridColumn>
                <GridColumn
                  computer={13}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Grid>
              <GridRow>
                <GridColumn
                  computer={3}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationMenu />
                </GridColumn>
                <GridColumn
                  computer={13}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridRow>
                <GridColumn
                  computer={3}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationMenu />
                </GridColumn>
                <GridColumn
                  computer={13}
                  mobile={16}
                  tablet={8}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridColumn
                    computer={3}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationMenu />
                  </GridColumn>,
                  <GridColumn
                    computer={13}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationDisplay />
                  </GridColumn>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <NavigationMenu />,
                    "computer": 3,
                    "mobile": 16,
                    "tablet": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <NavigationDisplay />,
                    "computer": 13,
                    "mobile": 16,
                    "tablet": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Navbar />,
          <BrowserRouter>
            <div>
              <Grid>
                <GridRow>
                  <GridColumn
                    computer={3}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationMenu />
                  </GridColumn>
                  <GridColumn
                    computer={13}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>
              </Grid>
            </div>
          </BrowserRouter>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div>
              <Grid>
                <GridRow>
                  <GridColumn
                    computer={3}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationMenu />
                  </GridColumn>
                  <GridColumn
                    computer={13}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>
              </Grid>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Grid>
                <GridRow>
                  <GridColumn
                    computer={3}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationMenu />
                  </GridColumn>
                  <GridColumn
                    computer={13}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridRow>
                  <GridColumn
                    computer={3}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationMenu />
                  </GridColumn>
                  <GridColumn
                    computer={13}
                    mobile={16}
                    tablet={8}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <GridColumn
                      computer={3}
                      mobile={16}
                      tablet={8}
                    >
                      <NavigationMenu />
                    </GridColumn>,
                    <GridColumn
                      computer={13}
                      mobile={16}
                      tablet={8}
                    >
                      <NavigationDisplay />
                    </GridColumn>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <NavigationMenu />,
                      "computer": 3,
                      "mobile": 16,
                      "tablet": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <NavigationDisplay />,
                      "computer": 13,
                      "mobile": 16,
                      "tablet": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
