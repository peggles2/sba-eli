// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navigation />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <BrowserRouter>
        <div>
          <Navbar />
          <Grid>
            <GridRow>
              <GridColumn
                computer={16}
                mobile={16}
                tablet={16}
              >
                <NavigationDisplay />
              </GridColumn>
            </GridRow>
          </Grid>
        </div>
      </BrowserRouter>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Navbar />
          <Grid>
            <GridRow>
              <GridColumn
                computer={16}
                mobile={16}
                tablet={16}
              >
                <NavigationDisplay />
              </GridColumn>
            </GridRow>
          </Grid>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Navbar />,
            <Grid>
              <GridRow>
                <GridColumn
                  computer={16}
                  mobile={16}
                  tablet={16}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridRow>
                <GridColumn
                  computer={16}
                  mobile={16}
                  tablet={16}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  computer={16}
                  mobile={16}
                  tablet={16}
                >
                  <NavigationDisplay />
                </GridColumn>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <NavigationDisplay />,
                  "computer": 16,
                  "mobile": 16,
                  "tablet": 16,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <BrowserRouter>
          <div>
            <Navbar />
            <Grid>
              <GridRow>
                <GridColumn
                  computer={16}
                  mobile={16}
                  tablet={16}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>
          </div>
        </BrowserRouter>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <Navbar />
            <Grid>
              <GridRow>
                <GridColumn
                  computer={16}
                  mobile={16}
                  tablet={16}
                >
                  <NavigationDisplay />
                </GridColumn>
              </GridRow>
            </Grid>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Navbar />,
              <Grid>
                <GridRow>
                  <GridColumn
                    computer={16}
                    mobile={16}
                    tablet={16}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>
              </Grid>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridRow>
                  <GridColumn
                    computer={16}
                    mobile={16}
                    tablet={16}
                  >
                    <NavigationDisplay />
                  </GridColumn>
                </GridRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <GridColumn
                    computer={16}
                    mobile={16}
                    tablet={16}
                  >
                    <NavigationDisplay />
                  </GridColumn>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <NavigationDisplay />,
                    "computer": 16,
                    "mobile": 16,
                    "tablet": 16,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
